import os
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor

logging.basicConfig(level=logging.INFO)

BOT_TOKEN = os.getenv("BOT_TOKEN")
if not BOT_TOKEN:
    raise RuntimeError("BOT_TOKEN is missing. Set it in Render ‚Üí Environment.")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start', 'help'])
async def send_welcome(message: types.Message):
    await message.reply("–ü—Ä–∏–≤—ñ—Ç! –Ø Liora ü§ç\n–ë–æ—Ç –¥–ª—è –∞–≤—Ç–æ—Ä—Å—å–∫–æ–≥–æ –Ω–∞–≥–ª—è–¥—É –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏.")
    logging.info("Handled /start or /help from %s", message.from_user.id)

# –ù–∞ –≤—Å—è–∫–∏–π –≤–∏–ø–∞–¥–æ–∫ –≤—ñ–¥–ø–æ–≤—ñ–º–æ –Ω–∞ –±—É–¥—å-—è–∫–∏–π —Ç–µ–∫—Å—Ç ‚Äî —â–æ–± –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏, —â–æ –∞–ø–¥–µ–π—Ç–∏ –ø—Ä–∏—Ö–æ–¥—è—Ç—å
@dp.message_handler()
async def echo_all(message: types.Message):
    await message.reply("–Ø –Ω–∞ –∑–≤'—è–∑–∫—É ‚úÖ")
    logging.info("Echoed a message from %s", message.from_user.id)

if __name__ == '__main__':
    logging.info("Starting polling‚Ä¶")
    executor.start_polling(dp, skip_updates=True)
